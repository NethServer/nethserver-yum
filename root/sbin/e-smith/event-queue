#!/usr/bin/perl

#
# NethServer
#
# Copyright (C) 2012 Nethesis srl
#

use strict;
use NethServer::Event;
use Data::Dumper;

my $usage = "NethServer (C) 2012 Nethesis srl

Usage:
    $0 <command>
    
    <command> := add|enable|disable|list|signal|status

    Command description:

	add	: if queue is enabled, add an event to it
	enable  : create an empty queue and enable it
	disable : disable and remove the queue contents
	list    : show the current event queue contents
	signal  : signal the events in the queue and disable it
	status  : check if the queue is enabled or not

";

my ($cmd, @args) = @ARGV;
my $returnValue = 0;

if($cmd eq 'enable') {
    $returnValue = NethServer::Event::queue_initialize();

} elsif($cmd eq 'disable') {
    $returnValue = NethServer::Event::queue_flush();

} elsif($cmd eq 'signal') {
    $returnValue = NethServer::Event::queue_signal();

} elsif($cmd eq 'status') {
    $returnValue = NethServer::Event::queue_is_enabled();

} elsif($cmd eq 'list') {
    if(NethServer::Event::queue_is_enabled()) {
	foreach(@{NethServer::Event::queue_read()}) {
	    print join("\t", @{$_}) . "\n";
	}
	$returnValue = 1;
    } else {
	$returnValue = 0;
    }
} elsif($cmd eq 'add') {
    if (NethServer::Event::queue_is_enabled()) {
       NethServer::Event::queue_add(@args);
    }
    $returnValue = 1;

} else {
    die $usage;

}

exit($returnValue > 0 ? 0 : 1);
